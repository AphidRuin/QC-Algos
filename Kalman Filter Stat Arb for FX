# region imports
from AlgorithmImports import *
from alpha import KalmanFilterStatisticalArbitrageAlphaModel
# endregion

class KalmanFilterStatisticalArbitrageAlgorithm(QCAlgorithm):

    def Initialize(self):
        self.SetStartDate(2019, 1, 1)
        self.SetEndDate(2023, 1, 1)
        self.SetCash(100000)

        self.SetBrokerageModel(BrokerageName.OandaBrokerage, AccountType.Margin)

        self.UniverseSettings.Resolution = Resolution.Minute

        # We focus on major forex pairs
        symbols = [ Symbol.Create(pair, SecurityType.Forex, Market.Oanda) for pair in
            ["AUDUSD", "EURUSD", "GBPUSD", "USDCAD", "USDCHF", "USDJPY"] ]
        self.SetUniverseSelection(ManualUniverseSelectionModel(symbols))

        # A custom alpha model for Kalman Filter prediction and statistical arbitrage signaling
        self.AddAlpha(KalmanFilterStatisticalArbitrageAlphaModel())

        # Use the insight weights for sizing, set a very long rebalance period to avoid constant rebalancing
        self.SetPortfolioConstruction(InsightWeightingPortfolioConstructionModel(Expiry.EndOfYear))
